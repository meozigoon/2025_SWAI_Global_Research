%%{init: { "flowchart": { "rankDir": "TB", "nodeSpacing": 12, "rankSpacing": 30 } }}%%
flowchart TB
    %% ---------- Basic Nodes ----------
    Start["Power ON / Reset"]
    Setup["setup() execution"]
    A1["Serial.begin(9600)"]
    A2["IrReceiver.begin(recvPin)"]
    A3["pinMode(recvPin, INPUT)<br/>pinMode(echoPin, INPUT)"]
    A4["pinMode(trigPin, OUTPUT)<br/>pinMode(12, OUTPUT)<br/>pinMode(13, OUTPUT)"]
    A5["MR.begin()<br/>ML.begin()"]
    A6["srv.attach(8)<br/>srv.write(0)"]
    Loop{{"loop() repeat"}}
    
    %% ---------- Ultrasonic Handling ----------
    USCall["Call ultraSonic()"]
    DistCheck{"distance <= 15cm?"}
    ServoOpen["srv.write(130)  // Open DRS"]
    ServoClose["srv.write(0)    // Close DRS"]
    
    %% ---------- IR Handling ----------
    CheckIR{"IrReceiver.decode()?"}
    ReadIR["Read decodedRawData"]
    TogglePower{"Power button? (0xBA45FF00)"}
    TP["Toggle isOn"]
    AfterPower["Proceed"]
    IsOn{"isOn == true?"}
    LEDoff["digitalWrite(12, LOW)"]
    LEDon["digitalWrite(12, HIGH)"]
    Switch{{"switch(decodedRawData)"}}
    Resume["IrReceiver.resume()"]
    
    %% ---------- Command Handling ----------
    subgraph Commands["Command Handling"]
        direction TB
        Case1["▶▶<br/>MR.moveForward(255)<br/>ML.moveForward(255)"]
        Case2["▶||<br/>MR.stop()<br/>ML.stop()"]
        Case3["◀◀<br/>MR.moveBackward(255)<br/>ML.moveBackward(255)"]
        Case4["▲<br/>MR.moveForward(255)<br/>ML.stop()"]
        Case5["▼<br/>MR.stop()<br/>ML.moveForward(255)"]
        Default["Other input: No action"]
    end
    
    %% ---------- Main Flow ----------
    Start --> Setup --> A1 --> A2 --> A3 --> A4 --> A5 --> A6 --> Loop
    Loop --> USCall
    USCall --> DistCheck
    DistCheck -- Yes --> ServoOpen --> CheckIR
    DistCheck -- No  --> ServoClose --> CheckIR
    
    CheckIR -- No --> Loop
    CheckIR -- Yes --> ReadIR --> TogglePower
    TogglePower -- Yes --> TP --> AfterPower
    TogglePower -- No  --> AfterPower
    AfterPower --> IsOn
    IsOn -- No  --> LEDoff --> Resume
    IsOn -- Yes --> LEDon --> Switch
    
    %% Switch Branches
    Switch --> Case1
    Switch --> Case2
    Switch --> Case3
    Switch --> Case4
    Switch --> Case5
    Switch --> Default
    
    %% Case End → Resume → Loop
    Case1 --> Resume
    Case2 --> Resume
    Case3 --> Resume
    Case4 --> Resume
    Case5 --> Resume
    Default --> Resume
    Resume --> Loop
